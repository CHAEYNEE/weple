<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.weple.meet.model.dao.MeetDao">
	<!-- 내가 개설한 모임 리스트 출력 Count -->
	<select id="totalCount" resultType="int">
		select count(*) from meet
		where meet_type =1
	</select>
	<select id="selectMyMeetList" resultType="meet">
		SELECT * FROM
		(SELECT
		ROWNUM AS RNUM, M.* FROM
		(SELECT
		*
		FROM MEET
		WHERE MEET_TYPE = 1
		ORDER BY 1
		DESC)M)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	<select id="enrollMemberList" resultType="int">
		select count(*) from
		follower where follower_status=0 and meet_no = #{meetNo}
	</select>
	<select id="selectEnrollMemberList" resultType="follower">
		SELECT * FROM
		    (SELECT ROWNUM AS RNUM, F.* FROM
		        (SELECT
			         MEMBER_ID,
			        MEMBER_GENDER,
			        MEMBER_IMAGE,
			        MEMBER_LIKE,
			        FOLLOWER_STATUS,
			        MEET_NO,
			        MEMBER_NO
			    FROM FOLLOWER
			    JOIN MEMBER USING (MEMBER_NO)
		        WHERE FOLLOWER_STATUS = 0 AND MEET_NO = #{meetNo}
		        ORDER BY 1 DESC)F)
		WHERE RNUM BETWEEN #{start} AND #{end}
		
	</select>

	<!-- 모임생성 -->
	<insert id="createMeet">
		INSERT INTO MEET VALUES (
		MEET_SEQ.NEXTVAL,
		#{meetDate},
		#{meetTitle},
		#{meetContentS},
		#{meetContentD},
		#{meetTotal}, 
		#{meetMargin}, 
		#{meetPrepare},
		#{meetCategory}, 
		#{meetAddress1},
		#{meetAddress2},
		#{meetLatitude},
		#{meetLongitude}, 
		#{meetThumbNail},
		1,
		#{meetCaptain}

		)
	</insert>
	<!-- 모임수정 -->
	<update id="modifyMeet">
		update meet set
		    MEET_CATEGORY = #{meetCategory},
		    meet_title = #{meetTitle},
		    MEET_THUMBNAIL = #{meetThumbNail},
		    MEET_DATE = #{meetDate},
		    MEET_ADDRESS1 = #{meetAddress1},
		    MEET_ADDRESS2 = #{meetAddress2},
		    MEET_LATITUDE = #{meetLatitude},
		    MEET_LONGITUDE = #{meetLongitude},
		    MEET_TOTAL = #{meetTotal},
		    MEET_CONTENT_S = #{meetContentS},
		    MEET_CONTENT_D = #{meetContentD},
		    MEET_PREPARE = #{meetPrepare}
		where meet_no = #{meetNo}
	</update>
	<!-- 모임 카테고리 메뉴 조회 -->
	<select id="smallCategoryList" resultType="category">
		select * from category where CATEGORY_REF_NO=#{categoryNo}
	</select>
	<!-- 모임 리스트 조회 -->
	<!-- <select id="selectCircleList" resultType="meet">
		SELECT * FROM
			(SELECT ROWNUM AS RNUM, M.* FROM
			    (SELECT * 
			    FROM MEET
			    WHERE MEET_TYPE = 1
			    ORDER BY 1 DESC)M)
			WHERE RNUM BETWEEN #{start} AND #{end}
	</select> -->
	<!-- 모임리스트 대분류로 조회 -->
	<select id="selectCircleList" resultType="meet">
		SELECT * 
		FROM
		    (select ROWNUM AS RNUM , M2.* from (
		    select meet_no, meet_date, meet_title, meet_content_s, meet_content_d, meet_total, meet_margin, meet_prepare, meet_category, meet_address1, meet_address2, meet_latitude, meet_longitude, meet_thumbnail, meet_captain, category_no, category_name, category_ref_no,
		        ROUND(NVL((select avg(NVL(review_star, 0))
		            from review r
		            where r.meet_no = m.meet_no),0),1) review_star,
		        (select count(meet_no)
		            from review r
		            where r.meet_no = m.meet_no) review_count,
           			(select count(*) from wish_list where meet_no = m.meet_no and member_no = #{memberNo}) is_meet_like 
		    from meet m
		    JOIN CATEGORY ON ( MEET_CATEGORY = CATEGORY_NO)
		    where meet_type = 1 AND CATEGORY_REF_NO = #{meetCategory}
		    order by 1 desc, review_count desc) m2)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	<!-- 모임리스트 소분류로 조회 -->
	<select id="categoryMeetList" resultType="meet">
		SELECT * 
		FROM
		    (select ROWNUM AS RNUM , M2.* from (
		    select meet_no, meet_date, meet_title, meet_content_s, meet_content_d, meet_total, meet_margin, meet_prepare, meet_category, meet_address1, meet_address2, meet_latitude, meet_longitude, meet_thumbnail, meet_captain, category_no, category_name, category_ref_no,
		        ROUND(NVL((select avg(NVL(review_star, 0))
		            from review r
		            where r.meet_no = m.meet_no),0),1) review_star,
		         (select count(meet_no)
		            from review r
		            where r.meet_no = m.meet_no) review_count 
		    from meet m
		    JOIN CATEGORY ON ( MEET_CATEGORY = CATEGORY_NO)
		    where meet_type = 1 AND CATEGORY_NO = #{meetCategory}
		    order by 1 desc, review_count desc) m2)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	<!-- 모임번호를 받아 모임을 select -->
	<select id="selectOneMeet" resultType="meet">
		SELECT * 
			FROM
			    (select ROWNUM AS RNUM , M2.* from (
			    select meet_no, meet_date, meet_title, meet_content_s, meet_content_d, meet_total, meet_margin, meet_prepare, meet_category, meet_address1, meet_address2, meet_latitude, meet_longitude, meet_thumbnail, meet_captain, category_no, category_name, category_ref_no,
			        ROUND(NVL((select avg(NVL(review_star, 0))
			            from review r
			            where r.meet_no = m.meet_no),0),1) review_star,
			         (select count(meet_no)
			            from review r
			            where r.meet_no = m.meet_no) review_count 
			    from meet m
			    JOIN CATEGORY ON ( MEET_CATEGORY = CATEGORY_NO)
			    where meet_no= #{meetNo}
			    order by 1 desc, review_count desc) m2)
	</select>
	<!-- 멤버아이디를 받아 멤버 조회 -->
	<select id="selectOneMember" resultType="member">
		select * from member where member_id = #{memberId}
	</select>
	<!-- 모임 가입 신청 -->
	<insert id="meetJoin">
		INSERT INTO FOLLOWER VALUES (
			#{meetNo},
			#{memberNo},
			0
		)
	</insert>
	<!-- 로그인한 회원이 가입승인을 받은 모임 멤버인지 조회 -->
	<select id="isMeetMember" resultType="follower">
		select * from follower where meet_no = #{meetNo} and member_no = #{memberNo}
	</select>
	
	
	<select id="meetMemberList" resultType="int">
		select count(*) from follower where follower_status=1 and meet_no = #{meetNo}
	</select>
	<select id="selectMeetMemberList" resultType="follower">
		SELECT * FROM
		    (SELECT ROWNUM AS RNUM, F.* FROM
		        (SELECT
			         MEMBER_ID,
			        MEMBER_GENDER,
			        MEMBER_IMAGE,
			        MEMBER_LIKE,
			        FOLLOWER_STATUS,
			        MEET_NO,
			        MEMBER_NO,
                    (select count(*) from mlike ml where mlike_giver_no = (select member_no from member where member_id=#{memberId}) and mlike_taker_no=member_no and ml.meet_no=#{meetNo}) is_like
			    FROM FOLLOWER
			    JOIN MEMBER USING (MEMBER_NO)
		        WHERE FOLLOWER_STATUS = 1 AND MEET_NO = #{meetNo}
		        ORDER BY 1 DESC)F)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	<!-- 모임좋아요를 눌렀느지 조회 -->
	<select id="isMeetLike" resultType="wishList">
		select * from wish_list where meet_no = #{meetNo} and member_no = #{memberNo}
	</select>
	<!-- 모임 좋아요 취소 -->
	<delete id="meetLikeCancle">
		delete from wish_list where meet_no = #{meetNo} and member_no = #{memberNo}
	</delete>
	
	<update id="updateEnrollMember">
		update follower set follower_status=1 where member_No=#{memberNo} and meet_no=#{meetNo}
	</update>
	
	<!-- 마감임박 모임 조회 -->
	<select id="meetMargin" resultType="meet">
	<![CDATA[ 
	select * 
	from (select meet_no, meet_date, meet_title, meet_content_s, meet_content_d, meet_total, meet_margin, meet_prepare, meet_category, meet_address1, meet_address2, meet_latitude, meet_longitude, meet_thumbnail, meet_captain,
	    ROUND(NVL((select avg(NVL(review_star, 0)) 
	        from review r 
	        where r.meet_no = m.meet_no),0),1) review_star,
	        (select count(meet_no)
	        from review r
	        where r.meet_no = m.meet_no) review_count 
	    from meet m where meet_type = 1 order by meet_margin desc) 
	where rownum<=12 order by meet_margin desc,review_star desc
	]]>
	</select>
	<select id="meetChatList" resultType="chat">
		SELECT 
	        CHAT_NO,
	        CHAT_CONTENT,
	        MEMBER_ID,
	        MEET_NO,
	        TO_CHAR(CHAT_DATE,'""YYYY"년"MM"월"DD"일" AMHH:mm:SS')as CHAT_DATE,
	        MEMBER_IMAGE
	    FROM CHAT
	    JOIN MEMBER USING(MEMBER_ID)
	    WHERE MEET_NO = #{meetNo} order by 1
	</select>
	<!--메인페이지에 인기순 모임조회 -->
	<select id="meetPopular" resultType="meet">
	<![CDATA[ 
	select * 
	from (select meet_no, meet_date, meet_title, meet_content_s, meet_content_d, meet_total, meet_margin, meet_prepare, meet_category, meet_address1, meet_address2, meet_latitude, meet_longitude, meet_thumbnail, meet_captain,
	    ROUND(NVL((select avg(NVL(review_star, 0))
	        from review r
	        where r.meet_no = m.meet_no),0),1) review_star,
	     (select count(meet_no)
	        from review r
	        where r.meet_no = m.meet_no) review_count 
	    from meet m where meet_type = 1 order by review_star desc, review_count desc) 
	where rownum<=12
	]]>
	</select>
	<!--메인페이지에 최신순 모임조회 -->
	<select id="meetNew" resultType="meet">
	<![CDATA[ 
	select * 
	from (select meet_no, meet_date, meet_title, meet_content_s, meet_content_d, meet_total, meet_margin, meet_prepare, meet_category, meet_address1, meet_address2, meet_latitude, meet_longitude, meet_thumbnail, meet_captain,
	    ROUND(NVL((select avg(NVL(review_star, 0))
	        from review r
	        where r.meet_no = m.meet_no),0),1) review_star,
	     (select count(meet_no)
	        from review r
	        where r.meet_no = m.meet_no) review_count 
	    from meet m where meet_type = 1 order by meet_date desc) 
	where rownum<=12
	]]>
	</select>
	<!-- 메인페이지에 선호 카테고리순 모임 조회 -->
	<select id="meetCategory" resultType="meet">
	<![CDATA[ 
	select * 
	from (select meet_no, meet_date, meet_title, meet_content_s, meet_content_d, meet_total, meet_margin, meet_prepare, meet_category, meet_address1, meet_address2, meet_latitude, meet_longitude, meet_thumbnail, meet_captain,
	    ROUND(NVL((select avg(NVL(review_star, 0))
	        from review r
	        where r.meet_no = m.meet_no),0),1) review_star,
	     (select count(meet_no)
	        from review r
	        where r.meet_no = m.meet_no) review_count 
	    from meet m where meet_type = 1 and meet_category in(5,4,3) order by review_star desc, review_count desc) 
	where rownum<=12
	]]>
	</select>
	<!-- 내모임 추방 -->
	<delete id="deleteMember">
		 DELETE FROM FOLLOWER WHERE MEMBER_NO = #{memberNo} and meet_no = #{meetNo}
	</delete>
	<!-- 모임 내 회원 호감도 -->
	<update id="memberLike">
		UPDATE MEMBER SET MEMBER_LIKE= MEMBER_LIKE+0.7 WHERE MEMBER_ID = #{memberId}
	</update>
	<!-- meetChat -->
	<insert id="insertMeetChat">
		INSERT INTO CHAT VALUES(CHAT_SEQ.NEXTVAL,#{chatContent},#{memberId},#{meetNo},TO_CHAR(SYSDATE,'YYYY-MM-DD'))
	</insert>
	<select id="meetChatLast" resultType="chat">
		select * from    
	    (SELECT 
	        CHAT_NO,
	        CHAT_CONTENT,
	        MEMBER_ID,
	        MEET_NO,
	        TO_CHAR(CHAT_DATE,'""YYYY"년"MM"월"DD"일" AMHH:mm:SS')as CHAT_DATE,
	        MEMBER_IMAGE
	    FROM CHAT
	    JOIN MEMBER USING(MEMBER_ID)
	    WHERE MEET_NO = #{meetNo})C where rownum <![CDATA[<=]]>1 order by 1 desc
		
	</select>

	<select id="selectMemberNo" resultType="int">
		SELECT MEMBER_NO FROM MEMBER WHERE MEMBER_ID = #{memberId}
	</select>
	<select id="status" resultType="follower">
		SELECT FOLLOWER_STATUS FROM FOLLOWER WHERE MEET_NO=#{meetNo} AND MEMBER_NO=#{selectMemberNo}
	</select>
	<select id="meetCapCheck" resultType="meet">
		SELECT * FROM MEET WHERE MEET_CAPTAIN = #{memberId} AND MEET_NO=#{meetNo}
	</select>
	<select id="selectMeetMargin" resultType="int">
		SELECT MEET_MARGIN FROM MEET WHERE MEET_NO = #{meetNo}
	</select>
	<update id="disCount">
		update meet set meet_margin = #{newMargin} where meet_no = #{meetNo}
	</update>
	<insert id="insertMemberLike">
		insert into mLike values(#{giverNo},#{takerNo},#{meetNo})
	</insert>
	<select id="like" resultType="memberLike">
		select * from Mlike where meet_no=#{meetNo} and MLIKE_GIVER_NO=#{memberNo}
	</select>
		
		
	<!-- 캘린더 -->
	<insert id="addCalendar">
		insert into calendar values(calendar_seq.nextval,#{meetNo},#{calTitle},#{calContent},#{calStart})
	</insert>
	<select id="calendarList" resultType="calendar">
		select * from calendar where meet_no = #{meetNo}
	</select>
	<delete id="removeCalendar">
		delete from calendar where cal_no=#{calNo}
	</delete>
	<select id="schedule" resultType="calendar">
		select * from calendar where cal_no=#{calNo}
	</select>
	<update id="modifyCalendar">
		update calendar set cal_title=#{calTitle},cal_content=#{calContent},cal_start=#{calStart} where cal_no=#{calNo}
	</update>


</mapper>
